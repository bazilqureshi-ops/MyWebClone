@using Emse.QMagic.DAL;
@using Emse.QMagic.WebTerminal.Helpers;
@{
    Layout = null;
    string LanguageCode = "EN";
    if (Session["MagicLanguage"] != null)
    {
        LanguageCode = Session["MagicLanguage"].ToString();
    }
    List<qmTicket> ParkedList = ViewBag.ParkedList;
    List<qmService> ServiceList = ViewBag.ServiceList;
    List<qmTicketHistory> ParkHistory = ViewBag.ParkHistory;
    List<qmCustomer> Customers = ViewBag.Customers;
}

<script>
    if ($("#TotalParkedBadge").length) {
        $("#TotalParkedBadge").html(@(ParkedList.Count()));
    }
</script>

@if (ParkedList.Count < 1)
{
    <div class="empty-state">
        <i class="fa fa-pause-circle"></i>
        <h3>@Localization.Translate(LanguageCode, "NoParkedTickets")</h3>
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th>@Localization.Translate(LanguageCode, "Ticket")</th>
                    <th>@Localization.Translate(LanguageCode, "CustomerInformation")</th>
                    <th>@Localization.Translate(LanguageCode, "Service")</th>
                    <th>@Localization.Translate(LanguageCode, "ParkedTime")</th>
                    <th>@Localization.Translate(LanguageCode, "Actions")</th>
                </tr>
            </thead>
            <tbody>
                @foreach (qmTicket ticket in ParkedList.OrderBy(t => t.PrintTime))
                {
                    qmTicketHistory history = ParkHistory.FirstOrDefault(h => h.TicketID == ticket.TicketID);
                    qmCustomer customer = ticket.CustomerID != null ? Customers.FirstOrDefault(c => c.CustomerID == ticket.CustomerID) : new qmCustomer { Name = "Patient", Surname = "" };
                    qmService service = ServiceList.FirstOrDefault(s => s.ServiceID == ticket.ServiceID);

                    TimeSpan parkedTime = TimeSpan.Zero;
                    if (history != null)
                    {
                        long nowTicks = DateTime.Now.Ticks;
                        long parkedTicks = history.HistoryDate.Ticks;
                        parkedTime = TimeSpan.FromTicks(nowTicks - parkedTicks);
                    }

                    <tr>
                        <td><span class="ticket-id">@ticket.TicketPrefix@ticket.TicketNumber</span></td>
                        <td>@(customer?.Name) @(customer?.Surname)</td>
                        <td>@(service?.ServiceName)</td>
                        <td>@parkedTime.ToString(@"hh\:mm\:ss")</td>
                        <td>
                            <button class="btn-icon" onclick="CallFromPark(@(history?.TicketHistoryID ?? 0))" title="Recall">
                                <i class="fa fa-bell"></i>
                            </button>
                            <button class="btn-icon" onclick="ServiceTransferList(true, @ticket.TicketID);" data-bs-toggle="modal" data-bs-target="#ServiceTransferModal" title="Transfer">
                                <i class="fa fa-random"></i>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}